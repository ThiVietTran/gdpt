// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: tho_cap.sql

package db

import (
	"context"

	"github.com/jackc/pgtype"
)

const createThoCap = `-- name: CreateThoCap :one
INSERT INTO tho_cap (
    ds_huynh_truong, bhd_id, cap_bac_id, nam_tho_cap, quyet_dinh_tho_cap
) VALUES (
    $1, $2, $3, $4, $5
) RETURNING ds_huynh_truong, bhd_id, cap_bac_id, nam_tho_cap, quyet_dinh_tho_cap
`

type CreateThoCapParams struct {
	DsHuynhTruong   pgtype.JSONB `json:"ds_huynh_truong"`
	BhdID           string       `json:"bhd_id"`
	CapBacID        string       `json:"cap_bac_id"`
	NamThoCap       int32        `json:"nam_tho_cap"`
	QuyetDinhThoCap []byte       `json:"quyet_dinh_tho_cap"`
}

func (q *Queries) CreateThoCap(ctx context.Context, arg CreateThoCapParams) (ThoCap, error) {
	row := q.db.QueryRow(ctx, createThoCap,
		arg.DsHuynhTruong,
		arg.BhdID,
		arg.CapBacID,
		arg.NamThoCap,
		arg.QuyetDinhThoCap,
	)
	var i ThoCap
	err := row.Scan(
		&i.DsHuynhTruong,
		&i.BhdID,
		&i.CapBacID,
		&i.NamThoCap,
		&i.QuyetDinhThoCap,
	)
	return i, err
}

const deleteThoCapByIDAndYear = `-- name: DeleteThoCapByIDAndYear :exec
DELETE FROM tho_cap WHERE bhd_id = $1 AND cap_bac_id = $2 AND nam_tho_cap = $3
`

type DeleteThoCapByIDAndYearParams struct {
	BhdID     string `json:"bhd_id"`
	CapBacID  string `json:"cap_bac_id"`
	NamThoCap int32  `json:"nam_tho_cap"`
}

func (q *Queries) DeleteThoCapByIDAndYear(ctx context.Context, arg DeleteThoCapByIDAndYearParams) error {
	_, err := q.db.Exec(ctx, deleteThoCapByIDAndYear, arg.BhdID, arg.CapBacID, arg.NamThoCap)
	return err
}

const findAllThoCap = `-- name: FindAllThoCap :many
SELECT ds_huynh_truong, bhd_id, cap_bac_id, nam_tho_cap, quyet_dinh_tho_cap FROM tho_cap
`

func (q *Queries) FindAllThoCap(ctx context.Context) ([]ThoCap, error) {
	rows, err := q.db.Query(ctx, findAllThoCap)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []ThoCap{}
	for rows.Next() {
		var i ThoCap
		if err := rows.Scan(
			&i.DsHuynhTruong,
			&i.BhdID,
			&i.CapBacID,
			&i.NamThoCap,
			&i.QuyetDinhThoCap,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const findThoCapByIDAndYear = `-- name: FindThoCapByIDAndYear :one
SELECT ds_huynh_truong, bhd_id, cap_bac_id, nam_tho_cap, quyet_dinh_tho_cap FROM tho_cap WHERE bhd_id = $1 AND cap_bac_id = $2 AND nam_tho_cap = $3 LIMIT 1
`

type FindThoCapByIDAndYearParams struct {
	BhdID     string `json:"bhd_id"`
	CapBacID  string `json:"cap_bac_id"`
	NamThoCap int32  `json:"nam_tho_cap"`
}

func (q *Queries) FindThoCapByIDAndYear(ctx context.Context, arg FindThoCapByIDAndYearParams) (ThoCap, error) {
	row := q.db.QueryRow(ctx, findThoCapByIDAndYear, arg.BhdID, arg.CapBacID, arg.NamThoCap)
	var i ThoCap
	err := row.Scan(
		&i.DsHuynhTruong,
		&i.BhdID,
		&i.CapBacID,
		&i.NamThoCap,
		&i.QuyetDinhThoCap,
	)
	return i, err
}

const updateThoCap = `-- name: UpdateThoCap :one
UPDATE tho_cap 
SET 
    ds_huynh_truong = $1, quyet_dinh_tho_cap = $5
WHERE bhd_id = $2 AND cap_bac_id = $3 AND nam_tho_cap = $4
RETURNING ds_huynh_truong, bhd_id, cap_bac_id, nam_tho_cap, quyet_dinh_tho_cap
`

type UpdateThoCapParams struct {
	DsHuynhTruong   pgtype.JSONB `json:"ds_huynh_truong"`
	BhdID           string       `json:"bhd_id"`
	CapBacID        string       `json:"cap_bac_id"`
	NamThoCap       int32        `json:"nam_tho_cap"`
	QuyetDinhThoCap []byte       `json:"quyet_dinh_tho_cap"`
}

func (q *Queries) UpdateThoCap(ctx context.Context, arg UpdateThoCapParams) (ThoCap, error) {
	row := q.db.QueryRow(ctx, updateThoCap,
		arg.DsHuynhTruong,
		arg.BhdID,
		arg.CapBacID,
		arg.NamThoCap,
		arg.QuyetDinhThoCap,
	)
	var i ThoCap
	err := row.Scan(
		&i.DsHuynhTruong,
		&i.BhdID,
		&i.CapBacID,
		&i.NamThoCap,
		&i.QuyetDinhThoCap,
	)
	return i, err
}

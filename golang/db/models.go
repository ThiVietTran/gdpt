// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/jackc/pgtype"
)

type PostStatus string

const (
	PostStatusDraft     PostStatus = "draft"
	PostStatusPublished PostStatus = "published"
)

func (e *PostStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PostStatus(s)
	case string:
		*e = PostStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for PostStatus: %T", src)
	}
	return nil
}

type NullPostStatus struct {
	PostStatus PostStatus `json:"post_status"`
	Valid      bool       `json:"valid"` // Valid is true if PostStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPostStatus) Scan(value interface{}) error {
	if value == nil {
		ns.PostStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PostStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPostStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PostStatus), nil
}

type UserStatus string

const (
	UserStatusDisabled   UserStatus = "disabled"
	UserStatusUnverified UserStatus = "unverified"
	UserStatusActive     UserStatus = "active"
)

func (e *UserStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserStatus(s)
	case string:
		*e = UserStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UserStatus: %T", src)
	}
	return nil
}

type NullUserStatus struct {
	UserStatus UserStatus `json:"user_status"`
	Valid      bool       `json:"valid"` // Valid is true if UserStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserStatus) Scan(value interface{}) error {
	if value == nil {
		ns.UserStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserStatus), nil
}

type BacHoc struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type Bhd struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type CapBac struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type DamNhiemCvBhd struct {
	HuynhtruongID  string       `json:"huynhtruong_id"`
	BhdID          string       `json:"bhd_id"`
	NamDamNhiemCv  int32        `json:"nam_dam_nhiem_cv"`
	ChucVuDamNhiem pgtype.JSONB `json:"chuc_vu_dam_nhiem"`
}

type DamNhiemCvDv struct {
	HuynhtruongID  string       `json:"huynhtruong_id"`
	DonviID        string       `json:"donvi_id"`
	NamDamNhiemCv  int32        `json:"nam_dam_nhiem_cv"`
	ChucVuDamNhiem pgtype.JSONB `json:"chuc_vu_dam_nhiem"`
}

type DonVi struct {
	DonviID string `json:"donvi_id"`
	BhdID   string `json:"bhd_id"`
	Name    string `json:"name"`
}

type DongGopBhd struct {
	HuynhtruongID  string       `json:"huynhtruong_id"`
	BhdID          string       `json:"bhd_id"`
	NamDongGop     int32        `json:"nam_dong_gop"`
	NoiDungDongGop pgtype.JSONB `json:"noi_dung_dong_gop"`
}

type DongGopDv struct {
	HuynhtruongID  string       `json:"huynhtruong_id"`
	DonviID        string       `json:"donvi_id"`
	NamDongGop     int32        `json:"nam_dong_gop"`
	NoiDungDongGop pgtype.JSONB `json:"noi_dung_dong_gop"`
}

type HuynhTruong struct {
	HuynhtruongID string       `json:"huynhtruong_id"`
	BhdID         string       `json:"bhd_id"`
	DonviID       string       `json:"donvi_id"`
	HtName        string       `json:"ht_name"`
	HtAnh34       []byte       `json:"ht_anh34"`
	PhapDanh      string       `json:"phap_danh"`
	NamSinh       string       `json:"nam_sinh"`
	ChanhQuan     string       `json:"chanh_quan"`
	DiaChi        string       `json:"dia_chi"`
	TrinhDo       string       `json:"trinh_do"`
	NgheNghiep    string       `json:"nghe_nghiep"`
	HonNhan       string       `json:"hon_nhan"`
	ThoGioi       pgtype.JSONB `json:"tho_gioi"`
	BacHoc        pgtype.JSONB `json:"bac_hoc"`
	TraiHuanLuyen pgtype.JSONB `json:"trai_huan_luyen"`
	NangKhieu     string       `json:"nang_khieu"`
}

type KetKhoaTraiHl struct {
	TraihuanluyenID string       `json:"traihuanluyen_id"`
	BhdID           string       `json:"bhd_id"`
	Year            int32        `json:"year"`
	NgayThi         string       `json:"ngay_thi"`
	DiaDiem         string       `json:"dia_diem"`
	DsHuynhTruongTs pgtype.JSONB `json:"ds_huynh_truong_ts"`
	DeThiTracNghiem pgtype.JSONB `json:"de_thi_trac_nghiem"`
	DeThiViet       pgtype.JSONB `json:"de_thi_viet"`
}

type NgayTraiHuanLuyen struct {
	TraihuanluyenID string       `json:"traihuanluyen_id"`
	BhdID           string       `json:"bhd_id"`
	Year            int32        `json:"year"`
	NgayHuanLuyen   string       `json:"ngay_huan_luyen"`
	DiaDiem         string       `json:"dia_diem"`
	DsHuynhTruongTs pgtype.JSONB `json:"ds_huynh_truong_ts"`
	DeTaiHoc        pgtype.JSONB `json:"de_tai_hoc"`
	GiaoTho         pgtype.JSONB `json:"giao_tho"`
}

type NgayTuHoc struct {
	BachocID      string       `json:"bachoc_id"`
	BhdID         string       `json:"bhd_id"`
	Year          int32        `json:"year"`
	NgayHoc       string       `json:"ngay_hoc"`
	DiaDiem       string       `json:"dia_diem"`
	DsHuynhTruong pgtype.JSONB `json:"ds_huynh_truong"`
	DeTaiHoc      string       `json:"de_tai_hoc"`
	GiaoTho       string       `json:"giao_tho"`
	BienBan       []byte       `json:"bien_ban"`
}

type Nienkhoabachoc struct {
	BachocID      string       `json:"bachoc_id"`
	BhdID         string       `json:"bhd_id"`
	Year          int32        `json:"year"`
	DsHuynhTruong pgtype.JSONB `json:"ds_huynh_truong"`
	GiaoTrinh     string       `json:"giao_trinh"`
	GiaoTho       string       `json:"giao_tho"`
	Bqt           string       `json:"bqt"`
}

type Nienkhoatraihuanluyen struct {
	TraihuanluyenID  string       `json:"traihuanluyen_id"`
	BhdID            string       `json:"bhd_id"`
	Year             int32        `json:"year"`
	DsHuynhTruongTs  pgtype.JSONB `json:"ds_huynh_truong_ts"`
	Hoidonggiaotho   pgtype.JSONB `json:"hoidonggiaotho"`
	Hoidonggianghuan pgtype.JSONB `json:"hoidonggianghuan"`
	Banquantrai      pgtype.JSONB `json:"banquantrai"`
	Camnangtrai      []byte       `json:"camnangtrai"`
}

type Post struct {
	ID        int64      `json:"id"`
	AuthorID  int64      `json:"author_id"`
	Title     string     `json:"title"`
	Body      string     `json:"body"`
	Status    PostStatus `json:"status"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt time.Time  `json:"updated_at"`
}

type Question struct {
	ID           int64        `json:"id"`
	BacHocID     string       `json:"bac_hoc_id"`
	QuestionText string       `json:"question_text"`
	Explanation  string       `json:"explanation"`
	Option1      pgtype.JSONB `json:"option1"`
	Option2      pgtype.JSONB `json:"option2"`
	Option3      pgtype.JSONB `json:"option3"`
	Option4      pgtype.JSONB `json:"option4"`
}

type Reset struct {
	UserID    int64     `json:"user_id"`
	Code      string    `json:"code"`
	CreatedAt time.Time `json:"created_at"`
}

type ThiBacHoc struct {
	BachocID        string       `json:"bachoc_id"`
	BhdID           string       `json:"bhd_id"`
	Year            int32        `json:"year"`
	NgayThi         string       `json:"ngay_thi"`
	DiaDiem         string       `json:"dia_diem"`
	DsHuynhTruong   pgtype.JSONB `json:"ds_huynh_truong"`
	DeThiTracNghiem []byte       `json:"de_thi_trac_nghiem"`
	DeThiViet       []byte       `json:"de_thi_viet"`
	BienBan         []byte       `json:"bien_ban"`
}

type ThoCap struct {
	DsHuynhTruong   pgtype.JSONB `json:"ds_huynh_truong"`
	BhdID           string       `json:"bhd_id"`
	CapBacID        string       `json:"cap_bac_id"`
	NamThoCap       int32        `json:"nam_tho_cap"`
	QuyetDinhThoCap []byte       `json:"quyet_dinh_tho_cap"`
}

type TraiHuanLuyen struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type User struct {
	ID           int64      `json:"id"`
	Email        string     `json:"email"`
	Pass         string     `json:"pass"`
	Salt         string     `json:"salt"`
	Status       UserStatus `json:"status"`
	Verification string     `json:"verification"`
	CreatedAt    time.Time  `json:"created_at"`
	UpdatedAt    time.Time  `json:"updated_at"`
}
